# templates/migration-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-db-migration
  annotations:
    {{- if .Values.community.migration.upgradeEnabled }}
    "helm.sh/hook": post-install,post-upgrade
    {{- else }}
    "helm.sh/hook": post-install
    {{- end }}
    "helm.sh/hook-weight": "1"  # run after database
spec:
  template:
    spec:
      restartPolicy: OnFailure
      {{- if not .Values.community.config.database.external }}
      initContainers:
      - name: wait-for-postgres
        image: postgres:15-alpine
        command:
          - /bin/sh
          - -c
          - |
            echo "Waiting for PostgreSQL..."
            until pg_isready -h {{ .Release.Name }}-postgresql -p 5432 -U $POSTGRES_USER; do
              sleep 2
            done
            echo "PostgreSQL is ready"
        env:
          - name: POSTGRES_USER
            {{- if .Values.community.config.database.existingSecret.usernameKey }}
            valueFrom:
              secretKeyRef:
                name: {{ .Values.community.config.database.existingSecret.secretName | default (printf "%s-db" .Release.Name) }}
                key: {{ .Values.community.config.database.existingSecret.usernameKey }}
            {{- else }}
            value: {{ .Values.community.config.database.username | quote }}
            {{- end }}
      {{- end }}
      containers:
      - name: db-migration
        image: "{{ .Values.community.image.repository }}:{{ .Values.community.image.tag }}"
        command: 
          - /bin/sh
          - -c
          - |
            echo "Running database migrations..."
            export DATABASE_URL="$DATABASE_URL&schema=public"
            pnpx prisma migrate deploy
        env:
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
              {{- if .Values.community.config.database.existingSecret.urlKey }}
                name: {{ .Values.community.config.database.existingSecret.secretName | default (printf "%s-db" .Release.Name) }}
                key: {{ .Values.community.config.database.existingSecret.urlKey }}
              {{- else }}
                name: {{ .Release.Name }}-community-secret
                key: DATABASE_URL
              {{- end }}
