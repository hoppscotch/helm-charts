# templates/service.yaml
apiVersion: {{ .Values.service.apiVersion }}
kind: Service
metadata:
  name: {{ .Values.service.name }}
  labels:
    app: {{ .Values.service.app }}
  annotations:
    {{- if and (eq .Values.service.type "LoadBalancer") (.Values.service.cloud.provider | default "gke" | eq "gke") }}
    networking.gke.io/load-balancer-type: "External"
    cloud.google.com/load-balancer-type: "External"
    {{- else if and (eq .Values.service.type "LoadBalancer") (.Values.service.cloud.provider | eq "aws") }}
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    {{- else if and (eq .Values.service.type "LoadBalancer") (.Values.service.cloud.provider | eq "azure") }}
    service.beta.kubernetes.io/azure-load-balancer-resource-group: {{ .Values.service.cloud.resourceGroup | default "" }}
    {{- else if and (eq .Values.service.type "LoadBalancer") (not .Values.service.cloud.provider) }}
    # Default LoadBalancer annotations for unspecified cloud provider
    service.kubernetes.io/load-balancer-type: "External"
    {{- end }}
spec:
  type: {{ 
    ternary "ClusterIP" "LoadBalancer" 
    .Values.service.ingress.enabled 
  }}
  
  {{- if not .Values.service.ingress.enabled }}
  loadBalancerIP: {{ .Values.global.externalIP }}
  externalTrafficPolicy: Cluster
  {{- end }}
  
  ports:
  - port: {{ .Values.service.ports.frontend.port }}
    targetPort: {{ .Values.service.ports.frontend.targetPort }}
    protocol: {{ .Values.service.ports.frontend.protocol }}
    name: {{ .Values.service.ports.frontend.name }}
  
  - port: {{ .Values.service.ports.admin.port }}
    targetPort: {{ .Values.service.ports.admin.targetPort }}
    protocol: {{ .Values.service.ports.admin.protocol }}
    name: {{ .Values.service.ports.admin.name }}
  
  - port: {{ .Values.service.ports.backend.port }}
    targetPort: {{ .Values.service.ports.backend.targetPort }}
    protocol: {{ .Values.service.ports.backend.protocol }}
    name: {{ .Values.service.ports.backend.name }}
  
  selector:
    app: {{ .Values.service.selector.app }}